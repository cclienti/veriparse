#ifndef VERIPARSE_VERILOG_DRIVER_HPP
#define VERIPARSE_VERILOG_DRIVER_HPP

#include <string>
#include <cstddef>
#include <istream>
#include <string>

#include <parser/verilog/verilog_scanner.hpp>
#include <veriparse/AST/nodes.hpp>

/// Generated by bison in the cmake build dir
#include <verilog/verilog_parser.hpp>


namespace Veriparse {
	namespace Parser {

		class VerilogDriver {
		public:
			VerilogDriver() = default;

			virtual ~VerilogDriver();

			/**
			 * parse - parse from a file
			 *
			 * @param filename is a valid string pointing the file to parse
			 */
			int parse(const std::string &filename);

			/**
			 * parse - parse from a c++ input stream
			 *
			 * @param iss is a valid input stream
			 */
			int parse(std::istream &iss);

			/**
			 * Return the source node
			 */
			AST::Node::Ptr get_source_node(void) {return m_source;};

			/**
			 * Set a new source node
			 */
			void set_source_node(AST::Node::Ptr source) {m_source = source;};


		private:
			int parse_helper(std::istream &stream, const std::string &filename="");


		private:
			VerilogParser  *parser = nullptr;
			VerilogScanner *scanner = nullptr;

			AST::Node::Ptr m_source;
		};

	}
}

#endif
